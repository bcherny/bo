// Generated by CoffeeScript 1.6.3
define(function(require, exports, module) {
  var Bo;
  Bo = require('bo');
  return Bo.Util = {
    each: function(collection, fn) {
      var key, value, _i, _len, _results, _results1;
      if (collection.length) {
        _results = [];
        for (key = _i = 0, _len = collection.length; _i < _len; key = ++_i) {
          value = collection[key];
          _results.push(fn(value, key));
        }
        return _results;
      } else {
        _results1 = [];
        for (value in collection) {
          key = collection[value];
          _results1.push(fn(value, key));
        }
        return _results1;
      }
    },
    extend: function(one, two) {
      var key, val;
      for (key in two) {
        val = two[key];
        one[key] = two[key];
      }
      return one;
    },
    fluent: function(fn) {
      return function() {
        fn.apply(this, arguments);
        return this;
      };
    },
    one: function(obj) {
      var id;
      for (id in obj) {
        return id;
      }
    }
  };
});
