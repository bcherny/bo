// Generated by CoffeeScript 1.6.3
var View,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __slice = [].slice;

View = (function() {
  View.prototype.events = {};

  View.prototype.model = new umodel;

  View.prototype.initialize = function() {};

  function View() {
    var args, element;
    element = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    this.attachEvent = __bind(this.attachEvent, this);
    this.element = element || document;
    if (izzy.object(this.events)) {
      _.each(this.events, this.attachEvent);
    }
    if (izzy["function"](this.initialize)) {
      this.initialize.apply(this, args);
    }
  }

  View.prototype.attachEvent = function(fn, type) {
    var t, types, _i, _len, _results;
    types = type.split(' ');
    _results = [];
    for (_i = 0, _len = types.length; _i < _len; _i++) {
      t = types[_i];
      _results.push(this.element.addEventListener(t, this[fn]));
    }
    return _results;
  };

  return View;

})();
