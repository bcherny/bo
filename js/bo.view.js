// Generated by CoffeeScript 1.6.3
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function(require, exports, module) {
  var Model, View, _;
  Model = require('bo.model');
  _ = require('bo.util');
  return View = (function(_super) {
    __extends(View, _super);

    function View() {
      this.attachEvent = __bind(this.attachEvent, this);
      _.each(this.events, this.attachEvent);
      this.initialize.apply(this, arguments);
    }

    View.prototype.attachEvent = function(fn, type) {
      return document.addEventListener(type, this[fn]);
    };

    return View;

  })(Model);
});
