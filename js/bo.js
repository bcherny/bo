// Generated by CoffeeScript 1.6.3
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

define(function(require, exports, module) {
  var Bo, Model, Pane, _;
  Model = require('bo.model');
  Pane = require('bo.pane');
  _ = require('bo.util');
  return Bo = (function() {
    Bo.prototype.options = {
      animationDuration: 200,
      paneAttribute: 'data-bo-pane',
      paneTriggerAttribute: 'data-bo-trigger-pane'
    };

    Bo.prototype.events = {
      'click': 'click'
    };

    Bo.prototype.panes = {};

    Bo.prototype.state = new Model;

    function Bo() {
      this.click = __bind(this.click, this);
      this.registerPane = __bind(this.registerPane, this);
      this.attachEvent = __bind(this.attachEvent, this);
      var panes;
      panes = document.querySelectorAll('[' + this.options.paneAttribute + ']');
      _.each(panes, this.registerPane);
      this.hideAll();
      this.show(_.one(this.panes));
      _.each(this.events, this.attachEvent);
    }

    Bo.prototype.attachEvent = function(fn, type) {
      return document.addEventListener(type, this[fn]);
    };

    Bo.prototype.registerPane = function(element) {
      var opts, pane;
      if (typeof element === 'String' || typeof element === 'Number') {
        opts = {
          id: element
        };
      } else {
        opts = {
          element: element
        };
      }
      opts = _.extend(opts, this.options);
      pane = new Pane(opts);
      return this.panes[pane.id] = pane;
    };

    Bo.prototype.hideAll = function() {
      return _.each(this.panes, function(n, pane) {
        return pane.right(true);
      });
    };

    Bo.prototype.show = function(id) {
      var newPane, oldPane;
      newPane = this.panes[id];
      oldPane = this.state.get('active');
      if (oldPane) {
        if (newPane.index > oldPane.index) {
          oldPane.left();
          newPane.right(true).show();
        } else {
          oldPane.right();
          newPane.left(true).show();
        }
      } else {
        newPane.show(true);
      }
      return this.state.set('active', newPane);
    };

    Bo.prototype.click = function(event) {
      var id;
      id = event.target.getAttribute(this.options.paneTriggerAttribute);
      if (id) {
        event.preventDefault();
        return this.show(id);
      }
    };

    return Bo;

  })();
});
