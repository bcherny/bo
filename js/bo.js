// Generated by CoffeeScript 1.6.3
var Bo, _ref,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Bo = (function(_super) {
  __extends(Bo, _super);

  function Bo() {
    this.click = __bind(this.click, this);
    this.registerPane = __bind(this.registerPane, this);
    _ref = Bo.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  Bo.prototype.options = {
    animationDuration: 200,
    paneAttribute: 'data-bo-pane',
    paneTriggerAttribute: 'data-bo-trigger-pane',
    change: function() {}
  };

  Bo.prototype.events = {
    'touchstart click': 'click'
  };

  Bo.prototype.panes = {};

  Bo.prototype.initialize = function() {
    var panes,
      _this = this;
    this.model.on('set:active', function(key, pane) {
      return _this.options.change.call(_this, pane.element);
    });
    this.model.set('active', null);
    panes = document.querySelectorAll("[" + this.options.paneAttribute + "]");
    _.each(panes, this.registerPane);
    this.hideAll();
    this.displayBlock();
    return this.show(_.one(this.panes));
  };

  Bo.prototype.displayBlock = function() {
    return this.iterate(function(pane) {
      return pane.element.style.display = 'block';
    });
  };

  Bo.prototype.registerPane = function(element) {
    var opts, pane;
    if (typeof element === 'String' || typeof element === 'Number') {
      opts = {
        id: element
      };
    } else {
      opts = {
        element: element
      };
    }
    opts = _.extend(opts, this.options);
    pane = new Pane(opts);
    return this.panes[pane.id] = pane;
  };

  Bo.prototype.iterate = function(fn) {
    return _.each(this.panes, fn);
  };

  Bo.prototype.hideAll = function() {
    return this.iterate(function(pane) {
      return pane.right(true);
    });
  };

  Bo.prototype.restToLeft = function(index) {
    return this.iterate(function(pane) {
      if (pane.index < index) {
        return pane.left(true);
      }
    });
  };

  Bo.prototype.restToRight = function(index) {
    return this.iterate(function(pane) {
      if (pane.index > index) {
        return pane.right(true);
      }
    });
  };

  Bo.prototype.show = function(id) {
    var index, newPane, oldPane;
    newPane = this.panes[id];
    oldPane = this.model.get('active');
    if (!newPane) {
      throw new Error('Pane with ID "' + id + '" does not exist in the DOM, or is not registered with Bo.');
    }
    if (oldPane) {
      index = newPane.index;
      if (index > oldPane.index) {
        oldPane.left();
        newPane.right(true).show();
        this.restToLeft(index);
      } else {
        oldPane.right();
        newPane.left(true).show();
        this.restToRight(index);
      }
    } else {
      newPane.show(true);
    }
    return this.model.set('active', newPane);
  };

  Bo.prototype.click = function(event) {
    var id;
    id = event.target.getAttribute(this.options.paneTriggerAttribute);
    if (id) {
      event.preventDefault();
      return this.show(id);
    }
  };

  return Bo;

})(View);
