// Generated by CoffeeScript 1.6.3
(function() {
  define(function(require, module, exports) {
    var Model, expect;
    Model = require('../js/bo.model');
    expect = chai.expect;
    mocha.setup('bdd');
    describe('Bo.Model', function() {
      it('should have a get method', function() {
        var model;
        model = new Model;
        return expect(model).to.have.property('get');
      });
      it('should have a set method', function() {
        var model;
        model = new Model;
        return expect(model).to.have.property('set');
      });
      it('should persist when set', function() {
        var key, model, value;
        model = new Model;
        key = 'foo';
        value = 'bar';
        model.set(key, value);
        return expect(model.data[key]).to.equal(value);
      });
      it('gotten data should not mutate after being set', function() {
        var key, model, value;
        model = new Model;
        key = 'foo';
        value = 'bar';
        model.set(key, value);
        return expect(model.get(key)).to.equal(value);
      });
      return it('gotten data should reflect the current model state', function() {
        var key, model, value, value2;
        model = new Model;
        key = 'foo';
        value = 'bar';
        value2 = 'bar2';
        model.set(key, value);
        model.set(key, value2);
        return expect(model.get(key)).to.equal(value2);
      });
    });
    return mocha.run();
  });

}).call(this);
